<pre class="metadata">
Title: URLPattern API
Shortname: urlpattern
Repository: WICG/urlpattern
Inline Github Issues: true
Group: WICG
Status: CG-DRAFT
Level: 1
URL: https://wicg.github.io/urlpattern/
Boilerplate: omit conformance, omit feedback-header
Editor: Ben Kelly, Google https://www.google.com/, wanderview@chromium.org
Abstract: The URLPattern API provides a web platform primitive for matching URLs based on a convenient pattern syntax.
!Participate: <a href="https://github.com/WICG/urlpattern">GitHub WICG/urlpattern</a> (<a href="https://github.com/WICG/urlpattern/issues/new">new issue</a>, <a href="https://github.com/WICG/urlpattern/issues?state=open">open issues</a>)
!Commits: <a href="https://github.com/WICG/urlpattern/commits/master/spec.bs">GitHub spec.bs commits</a>
Complain About: accidental-2119 yes, missing-example-ids yes
Indent: 2
Default Biblio Status: current
Markup Shorthands: markdown yes
</pre>

<style>
.selected-text-file-an-issue {
  position: fixed;
  bottom: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.8);
  font-size: smaller;
  padding: 4px 10px;
  z-index: 4;
}

dfn var {
  font-style: italic;
}

table {
  margin: 1em 0;
}

/* WHATWG-style <hr>s, instead of WICG-style. Specific selector is necessary to override WICG styles. */
:not(.head) > :not(.head) + hr {
  display: block;
  background: none;
  border: none;
  padding: 0;
  margin: 3em 0;
  height: auto;
}
:not(.head) > :not(.head) + hr::before {
  content: none;
}

/* domintro from https://resources.whatwg.org/standard.css */
.domintro {
  position: relative;
  color: green;
  background: #DDFFDD;
  margin: 2.5em 0 2em 0;
  padding: 1.5em 1em 0.5em 2em;
}

.domintro dt, .domintro dt * {
  color: black;
  font-size: inherit;
}
.domintro dd {
  margin: 0.5em 0 1em 2em; padding: 0;
}
.domintro dd p {
  margin: 0.5em 0;
}
.domintro::before {
  content: 'For web developers (non-normative)';
  background: green;
  color: white;
  padding: 0.15em 0.25em;
  font-style: normal;
  position: absolute;
  top: -0.8em;
  left: -0.8em;
}
</style>

<script src="https://resources.whatwg.org/file-issue.js" async></script>

<h2 id=urlpattern-class>The {{URLPattern}} class </h2>

<xmp class="idl">
typedef (USVString or URLPatternInit) URLPatternInput;

[Exposed=(Window,Worker)]
interface URLPattern {
  constructor(URLPatternInput input, optional USVString baseURL);

  boolean test(URLPatternInput input, optional USVString baseURL);

  URLPatternResult? exec(URLPatternInput input, optional USVString baseURL);

  readonly attribute USVString protocol;
  readonly attribute USVString username;
  readonly attribute USVString password;
  readonly attribute USVString hostname;
  readonly attribute USVString port;
  readonly attribute USVString pathname;
  readonly attribute USVString search;
  readonly attribute USVString hash;
};

dictionary URLPatternInit {
  USVString protocol;
  USVString username;
  USVString password;
  USVString hostname;
  USVString port;
  USVString pathname;
  USVString search;
  USVString hash;
  USVString baseURL;
};

dictionary URLPatternResult {
  sequence<URLPatternInput> inputs;

  URLPatternComponentResult protocol;
  URLPatternComponentResult username;
  URLPatternComponentResult password;
  URLPatternComponentResult hostname;
  URLPatternComponentResult port;
  URLPatternComponentResult pathname;
  URLPatternComponentResult search;
  URLPatternComponentResult hash;
};

dictionary URLPatternComponentResult {
  USVString input;
  record<USVString, USVString> groups;
};
</xmp>

Each {{URLPattern}} object has an associated <dfn for=URLPattern>protocol component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>username component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>password component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>hostname component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>port component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>pathname component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>search component</dfn>, a [=component=], initially null.

Each {{URLPattern}} object has an associated <dfn for=URLPattern>hash component</dfn>, a [=component=], initially null.

<dl class="domintro non-normative">
  <dt><code>{{URLPattern}} . {{URLPattern/protocol}}</code>
  <dd>
    <p>The normalized protocol pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/username}}</code>
  <dd>
    <p>The normalized username pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/password}}</code>
  <dd>
    <p>The normalized password pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/hostname}}</code>
  <dd>
    <p>The normalized hostname pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/port}}</code>
  <dd>
    <p>The normalized port pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/pathname}}</code>
  <dd>
    <p>The normalized pathname pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/search}}</code>
  <dd>
    <p>The normalized search pattern string.
  </dd>

  <dt><code>{{URLPattern}} . {{URLPattern/hash}}</code>
  <dd>
    <p>The normalized hash pattern string.
  </dd>
</dl>

<div algorithm>
  The <dfn attribute for="URLPattern">protocol</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/protocol component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">username</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/username component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">password</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/password component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">hostname</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/hostname component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">port</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/port component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">pathname</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/pathname component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">search</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/search component=]'s [=component/pattern string=].
</div>

<div algorithm>
  The <dfn attribute for="URLPattern">hash</dfn> getter steps are:

  1. Return [=this=]'s [=URLPattern/hash component=]'s [=component/pattern string=].
</div>

<h2 id=components>Components</h2>

<p>A {{URLPattern}} is associated with multiple <dfn>component</dfn> objects.

<p>A [=component=] has an associated <dfn for=component>pattern string</dfn>, a string, initially null.
